Hello, I am  2
Hello, I am  1
Hello, I am  0
data sent to node 1
data received on node 1 from node 0
Range
[range(0, 1354), range(1354, 2708)]
data sent to node 2
data received on node 2 from node 0
Range
[range(0, 1354), range(1354, 2708)]
requested_nodes_list
[[], [], [1354, 1356, 1358, 1360, 1361, 1363, 1365, 1371, 1374, 1376, 1380, 1381, 1382, 1387, 1389, 1393, 1394, 1395, 1397, 1398, 1405, 1407, 1409, 1414, 1418, 1420, 1424, 1426, 1436, 1437, 1440, 1445, 1447, 1448, 1449, 1450, 1452, 1454, 1462, 1464, 1465, 1466, 1470, 1471, 1472, 1475, 1477, 1478, 1483, 1484, 1490, 1491, 1495, 1496, 1497, 1498, 1500, 1508, 1516, 1521, 1523, 1524, 1531, 1540, 1541, 1550, 1556, 1560, 1564, 1567, 1571, 1577, 1581, 1584, 1586, 1593, 1594, 1596, 1601, 1602, 1603, 1606, 1607, 1610, 1611, 1617, 1621, 1624, 1627, 1631, 1632, 1633, 1636, 1638, 1640, 1665, 1670, 1671, 1676, 1677, 1679, 1684, 1690, 1696, 1706, 1707, 1716, 1718, 1719, 1731, 1732, 1736, 1738, 1740, 1741, 1748, 1749, 1750, 1751, 1756, 1758, 1763, 1768, 1783, 1785, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1805, 1807, 1808, 1812, 1813, 1816, 1817, 1822, 1826, 1845, 1856, 1864, 1866, 1868, 1869, 1874, 1876, 1879, 1884, 1885, 1891, 1893, 1894, 1896, 1902, 1906, 1908, 1911, 1915, 1919, 1921, 1922, 1926, 1932, 1934, 1935, 1941, 1944, 1948, 1949, 1956, 1958, 1959, 1961, 1962, 1967, 1970, 1975, 1979, 1980, 1981, 1982, 1986, 1988, 1996, 2001, 2002, 2006, 2007, 2008, 2009, 2013, 2019, 2020, 2021, 2024, 2025, 2036, 2053, 2058, 2063, 2064, 2067, 2069, 2073, 2082, 2087, 2090, 2091, 2095, 2099, 2101, 2102, 2105, 2107, 2108, 2109, 2111, 2114, 2123, 2135, 2138, 2139, 2141, 2145, 2147, 2148, 2156, 2160, 2161, 2165, 2169, 2179, 2180, 2185, 2186, 2187, 2189, 2190, 2191, 2193, 2196, 2200, 2201, 2206, 2207, 2211, 2215, 2219, 2224, 2225, 2231, 2233, 2238, 2240, 2241, 2242, 2244, 2245, 2252, 2254, 2261, 2272, 2274, 2278, 2280, 2284, 2285, 2288, 2291, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2309, 2312, 2321, 2324, 2325, 2328, 2333, 2335, 2341, 2343, 2362, 2365, 2367, 2377, 2380, 2386, 2391, 2392, 2393, 2394, 2395, 2400, 2401, 2403, 2404, 2405, 2406, 2407, 2408, 2410, 2413, 2414, 2415, 2416, 2427, 2438, 2439, 2440, 2441, 2443, 2446, 2447, 2460, 2463, 2464, 2471, 2472, 2475, 2477, 2478, 2481, 2490, 2495, 2501, 2506, 2511, 2515, 2516, 2520, 2533, 2544, 2548, 2549, 2553, 2569, 2575, 2580, 2585, 2596, 2598, 2599, 2611, 2614, 2623, 2628, 2630, 2636, 2644, 2645, 2646, 2653, 2654, 2657, 2658, 2661, 2665, 2672, 2675, 2678, 2682, 2686, 2690, 2697, 2707]]
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.]]) torch.Size([1354, 1433])
tensor([[1354, 1356,    0,  ..., 1205, 1205, 1205],
        [1275,  144, 1134,  ..., 1684, 2160, 1206]]) torch.Size([2, 5594])
world size 3
request nodes: 0
request nodes: 375
Rank 1 sending [1354, 1356, 1358, 1360, 1361, 1363, 1365, 1371, 1374, 1376, 1380, 1381, 1382, 1387, 1389, 1393, 1394, 1395, 1397, 1398, 1405, 1407, 1409, 1414, 1418, 1420, 1424, 1426, 1436, 1437, 1440, 1445, 1447, 1448, 1449, 1450, 1452, 1454, 1462, 1464, 1465, 1466, 1470, 1471, 1472, 1475, 1477, 1478, 1483, 1484, 1490, 1491, 1495, 1496, 1497, 1498, 1500, 1508, 1516, 1521, 1523, 1524, 1531, 1540, 1541, 1550, 1556, 1560, 1564, 1567, 1571, 1577, 1581, 1584, 1586, 1593, 1594, 1596, 1601, 1602, 1603, 1606, 1607, 1610, 1611, 1617, 1621, 1624, 1627, 1631, 1632, 1633, 1636, 1638, 1640, 1665, 1670, 1671, 1676, 1677, 1679, 1684, 1690, 1696, 1706, 1707, 1716, 1718, 1719, 1731, 1732, 1736, 1738, 1740, 1741, 1748, 1749, 1750, 1751, 1756, 1758, 1763, 1768, 1783, 1785, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1805, 1807, 1808, 1812, 1813, 1816, 1817, 1822, 1826, 1845, 1856, 1864, 1866, 1868, 1869, 1874, 1876, 1879, 1884, 1885, 1891, 1893, 1894, 1896, 1902, 1906, 1908, 1911, 1915, 1919, 1921, 1922, 1926, 1932, 1934, 1935, 1941, 1944, 1948, 1949, 1956, 1958, 1959, 1961, 1962, 1967, 1970, 1975, 1979, 1980, 1981, 1982, 1986, 1988, 1996, 2001, 2002, 2006, 2007, 2008, 2009, 2013, 2019, 2020, 2021, 2024, 2025, 2036, 2053, 2058, 2063, 2064, 2067, 2069, 2073, 2082, 2087, 2090, 2091, 2095, 2099, 2101, 2102, 2105, 2107, 2108, 2109, 2111, 2114, 2123, 2135, 2138, 2139, 2141, 2145, 2147, 2148, 2156, 2160, 2161, 2165, 2169, 2179, 2180, 2185, 2186, 2187, 2189, 2190, 2191, 2193, 2196, 2200, 2201, 2206, 2207, 2211, 2215, 2219, 2224, 2225, 2231, 2233, 2238, 2240, 2241, 2242, 2244, 2245, 2252, 2254, 2261, 2272, 2274, 2278, 2280, 2284, 2285, 2288, 2291, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2309, 2312, 2321, 2324, 2325, 2328, 2333, 2335, 2341, 2343, 2362, 2365, 2367, 2377, 2380, 2386, 2391, 2392, 2393, 2394, 2395, 2400, 2401, 2403, 2404, 2405, 2406, 2407, 2408, 2410, 2413, 2414, 2415, 2416, 2427, 2438, 2439, 2440, 2441, 2443, 2446, 2447, 2460, 2463, 2464, 2471, 2472, 2475, 2477, 2478, 2481, 2490, 2495, 2501, 2506, 2511, 2515, 2516, 2520, 2533, 2544, 2548, 2549, 2553, 2569, 2575, 2580, 2585, 2596, 2598, 2599, 2611, 2614, 2623, 2628, 2630, 2636, 2644, 2645, 2646, 2653, 2654, 2657, 2658, 2661, 2665, 2672, 2675, 2678, 2682, 2686, 2690, 2697, 2707]
requested_nodes_list
[[], [7, 8, 13, 24, 29, 34, 48, 63, 66, 80, 83, 90, 93, 100, 121, 127, 131, 132, 140, 143, 144, 146, 149, 150, 151, 168, 171, 178, 190, 191, 194, 195, 213, 214, 218, 226, 229, 230, 236, 243, 244, 245, 251, 254, 256, 257, 264, 271, 278, 287, 291, 296, 301, 304, 313, 325, 331, 340, 341, 346, 347, 350, 352, 353, 361, 374, 377, 379, 396, 402, 403, 414, 416, 417, 437, 438, 446, 454, 465, 474, 483, 486, 490, 493, 498, 505, 510, 511, 512, 517, 520, 522, 525, 530, 539, 548, 550, 557, 561, 575, 579, 581, 587, 588, 594, 600, 607, 609, 610, 617, 620, 640, 641, 652, 654, 668, 670, 674, 678, 689, 691, 693, 695, 702, 714, 720, 733, 736, 740, 742, 747, 752, 753, 756, 760, 764, 765, 768, 772, 780, 782, 785, 789, 794, 799, 822, 829, 834, 835, 836, 837, 838, 839, 843, 857, 861, 865, 866, 869, 878, 879, 884, 887, 890, 891, 894, 895, 896, 897, 898, 899, 900, 901, 902, 907, 908, 914, 915, 918, 919, 920, 923, 928, 931, 933, 939, 940, 941, 951, 979, 986, 988, 993, 999, 1003, 1007, 1008, 1011, 1027, 1030, 1043, 1050, 1060, 1066, 1067, 1084, 1085, 1099, 1157, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 1352, 1353], []]
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]) torch.Size([1354, 1433])
tensor([[1354, 1354, 1354,  ..., 1205, 1205, 1205],
        [1701, 2377, 1275,  ..., 1447, 1684, 2160]]) torch.Size([2, 6090])
world size 3
request nodes: 346
Rank 1 has requested data
Rank 2 has received tensor([1354, 1356, 1358, 1360, 1361, 1363, 1365, 1371, 1374, 1376, 1380, 1381,
        1382, 1387, 1389, 1393, 1394, 1395, 1397, 1398, 1405, 1407, 1409, 1414,
        1418, 1420, 1424, 1426, 1436, 1437, 1440, 1445, 1447, 1448, 1449, 1450,
        1452, 1454, 1462, 1464, 1465, 1466, 1470, 1471, 1472, 1475, 1477, 1478,
        1483, 1484, 1490, 1491, 1495, 1496, 1497, 1498, 1500, 1508, 1516, 1521,
        1523, 1524, 1531, 1540, 1541, 1550, 1556, 1560, 1564, 1567, 1571, 1577,
        1581, 1584, 1586, 1593, 1594, 1596, 1601, 1602, 1603, 1606, 1607, 1610,
        1611, 1617, 1621, 1624, 1627, 1631, 1632, 1633, 1636, 1638, 1640, 1665,
        1670, 1671, 1676, 1677, 1679, 1684, 1690, 1696, 1706, 1707, 1716, 1718,
        1719, 1731, 1732, 1736, 1738, 1740, 1741, 1748, 1749, 1750, 1751, 1756,
        1758, 1763, 1768, 1783, 1785, 1796, 1797, 1798, 1799, 1800, 1801, 1804,
        1805, 1807, 1808, 1812, 1813, 1816, 1817, 1822, 1826, 1845, 1856, 1864,
        1866, 1868, 1869, 1874, 1876, 1879, 1884, 1885, 1891, 1893, 1894, 1896,
        1902, 1906, 1908, 1911, 1915, 1919, 1921, 1922, 1926, 1932, 1934, 1935,
        1941, 1944, 1948, 1949, 1956, 1958, 1959, 1961, 1962, 1967, 1970, 1975,
        1979, 1980, 1981, 1982, 1986, 1988, 1996, 2001, 2002, 2006, 2007, 2008,
        2009, 2013, 2019, 2020, 2021, 2024, 2025, 2036, 2053, 2058, 2063, 2064,
        2067, 2069, 2073, 2082, 2087, 2090, 2091, 2095, 2099, 2101, 2102, 2105,
        2107, 2108, 2109, 2111, 2114, 2123, 2135, 2138, 2139, 2141, 2145, 2147,
        2148, 2156, 2160, 2161, 2165, 2169, 2179, 2180, 2185, 2186, 2187, 2189,
        2190, 2191, 2193, 2196, 2200, 2201, 2206, 2207, 2211, 2215, 2219, 2224,
        2225, 2231, 2233, 2238, 2240, 2241, 2242, 2244, 2245, 2252, 2254, 2261,
        2272, 2274, 2278, 2280, 2284, 2285, 2288, 2291, 2294, 2295, 2296, 2297,
        2298, 2299, 2300, 2301, 2302, 2309, 2312, 2321, 2324, 2325, 2328, 2333,
        2335, 2341, 2343, 2362, 2365, 2367, 2377, 2380, 2386, 2391, 2392, 2393,
        2394, 2395, 2400, 2401, 2403, 2404, 2405, 2406, 2407, 2408, 2410, 2413,
        2414, 2415, 2416, 2427, 2438, 2439, 2440, 2441, 2443, 2446, 2447, 2460,
        2463, 2464, 2471, 2472, 2475, 2477, 2478, 2481, 2490, 2495, 2501, 2506,
        2511, 2515, 2516, 2520, 2533, 2544, 2548, 2549, 2553, 2569, 2575, 2580,
        2585, 2596, 2598, 2599, 2611, 2614, 2623, 2628, 2630, 2636, 2644, 2645,
        2646, 2653, 2654, 2657, 2658, 2661, 2665, 2672, 2675, 2678, 2682, 2686,
        2690, 2697, 2707])
Rank 2 index remapped to  tensor([   0,    2,    4,    6,    7,    9,   11,   17,   20,   22,   26,   27,
          28,   33,   35,   39,   40,   41,   43,   44,   51,   53,   55,   60,
          64,   66,   70,   72,   82,   83,   86,   91,   93,   94,   95,   96,
          98,  100,  108,  110,  111,  112,  116,  117,  118,  121,  123,  124,
         129,  130,  136,  137,  141,  142,  143,  144,  146,  154,  162,  167,
         169,  170,  177,  186,  187,  196,  202,  206,  210,  213,  217,  223,
         227,  230,  232,  239,  240,  242,  247,  248,  249,  252,  253,  256,
         257,  263,  267,  270,  273,  277,  278,  279,  282,  284,  286,  311,
         316,  317,  322,  323,  325,  330,  336,  342,  352,  353,  362,  364,
         365,  377,  378,  382,  384,  386,  387,  394,  395,  396,  397,  402,
         404,  409,  414,  429,  431,  442,  443,  444,  445,  446,  447,  450,
         451,  453,  454,  458,  459,  462,  463,  468,  472,  491,  502,  510,
         512,  514,  515,  520,  522,  525,  530,  531,  537,  539,  540,  542,
         548,  552,  554,  557,  561,  565,  567,  568,  572,  578,  580,  581,
         587,  590,  594,  595,  602,  604,  605,  607,  608,  613,  616,  621,
         625,  626,  627,  628,  632,  634,  642,  647,  648,  652,  653,  654,
         655,  659,  665,  666,  667,  670,  671,  682,  699,  704,  709,  710,
         713,  715,  719,  728,  733,  736,  737,  741,  745,  747,  748,  751,
         753,  754,  755,  757,  760,  769,  781,  784,  785,  787,  791,  793,
         794,  802,  806,  807,  811,  815,  825,  826,  831,  832,  833,  835,
         836,  837,  839,  842,  846,  847,  852,  853,  857,  861,  865,  870,
         871,  877,  879,  884,  886,  887,  888,  890,  891,  898,  900,  907,
         918,  920,  924,  926,  930,  931,  934,  937,  940,  941,  942,  943,
         944,  945,  946,  947,  948,  955,  958,  967,  970,  971,  974,  979,
         981,  987,  989, 1008, 1011, 1013, 1023, 1026, 1032, 1037, 1038, 1039,
        1040, 1041, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1059,
        1060, 1061, 1062, 1073, 1084, 1085, 1086, 1087, 1089, 1092, 1093, 1106,
        1109, 1110, 1117, 1118, 1121, 1123, 1124, 1127, 1136, 1141, 1147, 1152,
        1157, 1161, 1162, 1166, 1179, 1190, 1194, 1195, 1199, 1215, 1221, 1226,
        1231, 1242, 1244, 1245, 1257, 1260, 1269, 1274, 1276, 1282, 1290, 1291,
        1292, 1299, 1300, 1303, 1304, 1307, 1311, 1318, 1321, 1324, 1328, 1332,
        1336, 1343, 1353])
Rank 2 has sent requested data
Rank 2 sending tensor(1356)
GCN_Cora_Distributed_MulNode.py:126: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  send_object(torch.tensor(requested_nodes_list[i]), dst = 1)
Rank 1 has received tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Rank 2 has requested data
Rank 1 has received tensor(1356)
Rank 1 index remapped to  tensor(2)
Rank 2 has received tensor([0., 0., 0.,  ..., 0., 0., 0.])
before cat in rank  2 torch.Size([1354, 1433])
after cat in rank 2 torch.Size([1355, 1433])
Rank  2  has data  tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Traceback (most recent call last):
  File "GCN_Cora_Distributed_MulNode.py", line 187, in <module>
    main(rank, world_size, host_addr_full)
  File "GCN_Cora_Distributed_MulNode.py", line 173, in main
    _, pred = model(data).max(dim=1)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "GCN_Cora_Distributed_MulNode.py", line 95, in forward
    print("request nodes:", len(requested_nodes_list[i]))
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/tensor.py", line 572, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
Rank 1 has sent requested data
before cat in rank  1 torch.Size([1354, 1433])
after cat in rank 1 torch.Size([1729, 1433])
Rank  1  has data  tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Traceback (most recent call last):
  File "GCN_Cora_Distributed_MulNode.py", line 187, in <module>
    main(rank, world_size, host_addr_full)
  File "GCN_Cora_Distributed_MulNode.py", line 173, in main
    _, pred = model(data).max(dim=1)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "GCN_Cora_Distributed_MulNode.py", line 138, in forward
    x = self.conv1(x, edge_index)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "GCN_Cora_Distributed_MulNode.py", line 19, in forward
    return self.propagate(edge_index, size=(x.size(0), x.size(0)), x=x)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch_geometric/nn/conv/message_passing.py", line 310, in propagate
    size, kwargs)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch_geometric/nn/conv/message_passing.py", line 202, in __collect__
    j if arg[-2:] == '_j' else i)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch_geometric/nn/conv/message_passing.py", line 171, in __lift__
    return src.index_select(self.node_dim, index)
IndexError: index out of range in self
Traceback (most recent call last):
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 340, in <module>
    main()
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 326, in main
    sigkill_handler(signal.SIGTERM, None)  # not coming back
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 301, in sigkill_handler
    raise subprocess.CalledProcessError(returncode=last_return_code, cmd=cmd)
subprocess.CalledProcessError: Command '['/home/dsys2352/miniconda3/envs/dist_GNN/bin/python', '-u', 'GCN_Cora_Distributed_MulNode.py']' returned non-zero exit status 1.
Killing subprocess 300383
srun: error: node024: task 2: Exited with exit code 1
Traceback (most recent call last):
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 340, in <module>
    main()
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 326, in main
    sigkill_handler(signal.SIGTERM, None)  # not coming back
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 301, in sigkill_handler
    raise subprocess.CalledProcessError(returncode=last_return_code, cmd=cmd)
subprocess.CalledProcessError: Command '['/home/dsys2352/miniconda3/envs/dist_GNN/bin/python', '-u', 'GCN_Cora_Distributed_MulNode.py']' returned non-zero exit status 1.
Killing subprocess 1105196
srun: error: node002: task 1: Exited with exit code 1
