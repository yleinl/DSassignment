Hello, I am  2
Hello, I am  1
Hello, I am  0
data sent to node 1
data received on node 1 from node 0
Range
[range(0, 1354), range(1354, 2708)]
data sent to node 2
data received on node 2 from node 0
Range
[range(0, 1354), range(1354, 2708)]
requested_nodes_list
[[], [], [1355, 1357, 1364, 1368, 1380, 1382, 1383, 1386, 1387, 1388, 1390, 1394, 1402, 1409, 1413, 1416, 1417, 1428, 1429, 1436, 1456, 1457, 1466, 1470, 1477, 1480, 1489, 1493, 1498, 1499, 1504, 1512, 1514, 1515, 1520, 1522, 1538, 1544, 1546, 1551, 1552, 1554, 1557, 1558, 1565, 1569, 1591, 1592, 1604, 1609, 1611, 1613, 1615, 1622, 1623, 1624, 1634, 1635, 1636, 1645, 1649, 1663, 1664, 1670, 1673, 1680, 1705, 1712, 1725, 1732, 1735, 1737, 1745, 1746, 1747, 1748, 1762, 1763, 1766, 1767, 1770, 1780, 1787, 1799, 1800, 1813, 1817, 1821, 1839, 1844, 1845, 1847, 1855, 1857, 1883, 1884, 1886, 1892, 1901, 1905, 1908, 1909, 1919, 1930, 1937, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1967, 1970, 1973, 1980, 1982, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 2001, 2006, 2012, 2021, 2024, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2047, 2049, 2051, 2052, 2053, 2062, 2063, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2079, 2080, 2085, 2093, 2099, 2103, 2117, 2124, 2128, 2131, 2140, 2143, 2155, 2158, 2168, 2181, 2190, 2192, 2216, 2229, 2230, 2247, 2256, 2259, 2264, 2288, 2370, 2371, 2372, 2373, 2375, 2377, 2378, 2380, 2381, 2382, 2383, 2384, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2397, 2398, 2399, 2400, 2403, 2404, 2405, 2406, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2425, 2426, 2427, 2428, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2458, 2460, 2461, 2462, 2463, 2464, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2537, 2538, 2540, 2542, 2543, 2544, 2545, 2546, 2547, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2557, 2558, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2672, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707]]
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]) torch.Size([1354, 1433])
tensor([[   0,    0,    0,  ..., 2370, 2370, 2370],
        [ 400, 1179, 2447,  ...,  100,  373,  929]]) torch.Size([2, 6592])
world size 3
request nodes: 0
request nodes: 485
requested_nodes_list
[[], [0, 1, 2, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 21, 23, 27, 28, 29, 32, 37, 39, 41, 43, 44, 45, 47, 48, 51, 52, 53, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 71, 72, 73, 74, 76, 79, 80, 81, 83, 86, 87, 89, 92, 93, 95, 100, 101, 102, 103, 107, 108, 109, 110, 116, 118, 119, 120, 121, 122, 125, 126, 130, 133, 134, 136, 137, 138, 140, 141, 143, 145, 149, 150, 153, 155, 156, 157, 158, 160, 162, 166, 170, 171, 172, 173, 177, 178, 180, 181, 182, 184, 185, 188, 191, 192, 195, 199, 200, 201, 205, 209, 213, 215, 216, 220, 221, 224, 225, 228, 229, 230, 232, 234, 235, 236, 237, 239, 240, 242, 243, 245, 249, 255, 258, 261, 263, 264, 265, 268, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 308, 310, 312, 314, 321, 325, 326, 329, 330, 332, 334, 335, 336, 338, 339, 342, 346, 347, 349, 351, 352, 353, 357, 358, 360, 361, 364, 365, 366, 367, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 386, 387, 391, 394, 395, 398, 401, 403, 406, 410, 412, 414, 415, 419, 420, 423, 428, 430, 431, 435, 442, 443, 444, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 469, 470, 472, 474, 475, 476, 477, 478, 481, 491, 492, 494, 496, 500, 505, 510, 515, 518, 519, 522, 523, 524, 526, 527, 528, 532, 534, 535, 538, 539, 543, 544, 546, 547, 549, 550, 552, 555, 557, 562, 564, 570, 571, 576, 580, 581, 583, 587, 591, 592, 593, 596, 597, 598, 599, 601, 603, 605, 608, 609, 610, 614, 615, 622, 623, 624, 627, 631, 632, 633, 634, 635, 638, 641, 642, 643, 645, 646, 647, 648, 650, 653, 656, 657, 660, 661, 663, 664, 668, 669, 674, 675, 676, 677, 679, 683, 684, 685, 686, 687, 693, 694, 695, 696, 698, 700, 701, 702, 703, 707, 708, 709, 710, 712, 713, 714, 715, 717, 718, 719, 721, 722, 724, 725, 728, 729, 731, 734, 735, 737, 740, 741, 744, 747, 750, 753, 756, 757, 758, 759, 765, 766, 774, 775, 777, 780, 781, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 801, 802, 804, 807, 808, 810, 811, 815, 817, 822, 824, 825, 829, 833, 834, 835, 836, 838, 839, 840, 844, 846, 849, 851, 852, 854, 855, 856, 861, 862, 863, 868, 869, 870, 874, 875, 876, 877, 878, 882, 883, 884, 885, 886, 888, 889, 891, 894, 895, 897, 898, 899, 903, 906, 907, 911, 913, 914, 918, 919, 923, 929, 930, 933, 935, 938, 944, 947, 948, 949, 950, 951, 953, 955, 956, 960, 962, 963, 965, 966, 967, 968, 969, 973, 975, 976, 977, 980, 981, 984, 986, 988, 990, 993, 995, 996, 997, 998, 1000, 1001, 1003, 1005, 1009, 1012, 1014, 1027, 1030, 1031, 1033, 1034, 1035, 1040, 1044, 1045, 1048, 1049, 1050, 1051, 1053, 1056, 1057, 1062, 1063, 1065, 1067, 1071, 1072, 1074, 1076, 1078, 1079, 1080, 1082, 1085, 1086, 1087, 1090, 1093, 1094, 1095, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1113, 1115, 1120, 1121, 1122, 1127, 1129, 1130, 1131, 1132, 1133, 1138, 1140, 1146, 1152, 1156, 1157, 1159, 1161, 1163, 1164, 1166, 1169, 1170, 1179, 1182, 1185, 1187, 1190, 1198, 1199, 1203, 1204, 1205, 1207, 1209, 1211, 1212, 1213, 1214, 1216, 1217, 1219, 1222, 1226, 1228, 1239, 1249, 1250, 1251, 1252, 1254, 1256, 1257, 1259, 1264, 1265, 1271, 1272, 1279, 1280, 1281, 1286, 1295, 1299, 1300, 1301, 1302, 1303, 1304, 1307, 1308, 1309, 1317, 1318, 1319, 1320, 1321, 1322, 1327, 1331, 1332, 1333, 1335, 1336, 1339, 1342, 1343, 1349, 1351, 1352, 1353], []]
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]) torch.Size([1354, 1433])
tensor([[   0, 1354, 1354,  ..., 2370, 2370, 2370],
        [2447, 1355, 1595,  ...,  373,  929, 2371]]) torch.Size([2, 6090])
world size 3
request nodes: 645
Rank 1 has requested data
Rank 2 has received tensor([1355, 1357, 1364, 1368, 1380, 1382, 1383, 1386, 1387, 1388, 1390, 1394,
        1402, 1409, 1413, 1416, 1417, 1428, 1429, 1436, 1456, 1457, 1466, 1470,
        1477, 1480, 1489, 1493, 1498, 1499, 1504, 1512, 1514, 1515, 1520, 1522,
        1538, 1544, 1546, 1551, 1552, 1554, 1557, 1558, 1565, 1569, 1591, 1592,
        1604, 1609, 1611, 1613, 1615, 1622, 1623, 1624, 1634, 1635, 1636, 1645,
        1649, 1663, 1664, 1670, 1673, 1680, 1705, 1712, 1725, 1732, 1735, 1737,
        1745, 1746, 1747, 1748, 1762, 1763, 1766, 1767, 1770, 1780, 1787, 1799,
        1800, 1813, 1817, 1821, 1839, 1844, 1845, 1847, 1855, 1857, 1883, 1884,
        1886, 1892, 1901, 1905, 1908, 1909, 1919, 1930, 1937, 1949, 1950, 1951,
        1952, 1954, 1955, 1956, 1967, 1970, 1973, 1980, 1982, 1984, 1985, 1986,
        1987, 1988, 1989, 1990, 1991, 2001, 2006, 2012, 2021, 2024, 2034, 2035,
        2036, 2037, 2038, 2039, 2040, 2041, 2047, 2049, 2051, 2052, 2053, 2062,
        2063, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2079,
        2080, 2085, 2093, 2099, 2103, 2117, 2124, 2128, 2131, 2140, 2143, 2155,
        2158, 2168, 2181, 2190, 2192, 2216, 2229, 2230, 2247, 2256, 2259, 2264,
        2288, 2370, 2371, 2372, 2373, 2375, 2377, 2378, 2380, 2381, 2382, 2383,
        2384, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2397,
        2398, 2399, 2400, 2403, 2404, 2405, 2406, 2407, 2409, 2410, 2411, 2412,
        2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2425, 2426, 2427,
        2428, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
        2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453,
        2454, 2455, 2456, 2458, 2460, 2461, 2462, 2463, 2464, 2466, 2467, 2468,
        2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
        2481, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
        2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
        2507, 2508, 2509, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
        2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
        2533, 2534, 2537, 2538, 2540, 2542, 2543, 2544, 2545, 2546, 2547, 2549,
        2550, 2551, 2552, 2553, 2554, 2555, 2557, 2558, 2560, 2561, 2562, 2563,
        2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
        2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
        2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
        2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2612,
        2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624,
        2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
        2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
        2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
        2662, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2672, 2674, 2675, 2676,
        2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2686, 2687, 2688, 2689,
        2690, 2691, 2692, 2693, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
        2703, 2704, 2705, 2706, 2707])
Rank 2 index remapped to  tensor([   1,    3,   10,   14,   26,   28,   29,   32,   33,   34,   36,   40,
          48,   55,   59,   62,   63,   74,   75,   82,  102,  103,  112,  116,
         123,  126,  135,  139,  144,  145,  150,  158,  160,  161,  166,  168,
         184,  190,  192,  197,  198,  200,  203,  204,  211,  215,  237,  238,
         250,  255,  257,  259,  261,  268,  269,  270,  280,  281,  282,  291,
         295,  309,  310,  316,  319,  326,  351,  358,  371,  378,  381,  383,
         391,  392,  393,  394,  408,  409,  412,  413,  416,  426,  433,  445,
         446,  459,  463,  467,  485,  490,  491,  493,  501,  503,  529,  530,
         532,  538,  547,  551,  554,  555,  565,  576,  583,  595,  596,  597,
         598,  600,  601,  602,  613,  616,  619,  626,  628,  630,  631,  632,
         633,  634,  635,  636,  637,  647,  652,  658,  667,  670,  680,  681,
         682,  683,  684,  685,  686,  687,  693,  695,  697,  698,  699,  708,
         709,  714,  715,  716,  717,  718,  719,  720,  721,  722,  723,  725,
         726,  731,  739,  745,  749,  763,  770,  774,  777,  786,  789,  801,
         804,  814,  827,  836,  838,  862,  875,  876,  893,  902,  905,  910,
         934, 1016, 1017, 1018, 1019, 1021, 1023, 1024, 1026, 1027, 1028, 1029,
        1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043,
        1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058,
        1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1071, 1072, 1073,
        1074, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
        1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
        1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114,
        1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
        1127, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
        1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
        1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
        1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
        1179, 1180, 1183, 1184, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1195,
        1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1206, 1207, 1208, 1209,
        1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
        1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
        1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
        1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258,
        1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
        1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
        1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
        1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
        1308, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1321, 1322,
        1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335,
        1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
        1349, 1350, 1351, 1352, 1353])
Rank 1 has received tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Rank 2 has sent requested data
GCN_Cora_Distributed_MulNode.py:124: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  send_object(torch.tensor(requested_nodes_list[i]).clone().detach(), dst = 1)
Rank 2 has requested data
Rank 1 has received tensor(1357)
Rank 1 index remapped to  tensor(3)
Rank 2 has received tensor([0., 0., 0.,  ..., 0., 0., 0.])
before cat in rank  2 torch.Size([1354, 1433])
after cat in rank 2 torch.Size([1355, 1433])
Rank  2  has data  tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Traceback (most recent call last):
  File "GCN_Cora_Distributed_MulNode.py", line 185, in <module>
    main(rank, world_size, host_addr_full)
  File "GCN_Cora_Distributed_MulNode.py", line 171, in main
    _, pred = model(data).max(dim=1)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "GCN_Cora_Distributed_MulNode.py", line 95, in forward
    print("request nodes:", len(requested_nodes_list[i]))
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/tensor.py", line 572, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
Rank 1 has sent requested data
before cat in rank  1 torch.Size([1354, 1433])
after cat in rank 1 torch.Size([1839, 1433])
Rank  1  has data  tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Traceback (most recent call last):
  File "GCN_Cora_Distributed_MulNode.py", line 185, in <module>
    main(rank, world_size, host_addr_full)
  File "GCN_Cora_Distributed_MulNode.py", line 171, in main
    _, pred = model(data).max(dim=1)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "GCN_Cora_Distributed_MulNode.py", line 136, in forward
    x = self.conv1(x, edge_index)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "GCN_Cora_Distributed_MulNode.py", line 19, in forward
    return self.propagate(edge_index, size=(x.size(0), x.size(0)), x=x)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch_geometric/nn/conv/message_passing.py", line 310, in propagate
    size, kwargs)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch_geometric/nn/conv/message_passing.py", line 202, in __collect__
    j if arg[-2:] == '_j' else i)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch_geometric/nn/conv/message_passing.py", line 171, in __lift__
    return src.index_select(self.node_dim, index)
IndexError: index out of range in self
Traceback (most recent call last):
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 340, in <module>
    main()
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 326, in main
    sigkill_handler(signal.SIGTERM, None)  # not coming back
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 301, in sigkill_handler
    raise subprocess.CalledProcessError(returncode=last_return_code, cmd=cmd)
subprocess.CalledProcessError: Command '['/home/dsys2352/miniconda3/envs/dist_GNN/bin/python', '-u', 'GCN_Cora_Distributed_MulNode.py']' returned non-zero exit status 1.
Killing subprocess 1097520
srun: error: node002: task 1: Exited with exit code 1
Traceback (most recent call last):
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 340, in <module>
    main()
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 326, in main
    sigkill_handler(signal.SIGTERM, None)  # not coming back
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 301, in sigkill_handler
    raise subprocess.CalledProcessError(returncode=last_return_code, cmd=cmd)
subprocess.CalledProcessError: Command '['/home/dsys2352/miniconda3/envs/dist_GNN/bin/python', '-u', 'GCN_Cora_Distributed_MulNode.py']' returned non-zero exit status 1.
Killing subprocess 291806
srun: error: node024: task 2: Exited with exit code 1
