Hello, I am  2
Hello, I am  1
Hello, I am  0
data sent to node 1
data received on node 1 from node 0
Range
[range(0, 1354), range(1354, 2708)]
data sent to node 2
data received on node 2 from node 0
Range
[range(0, 1354), range(1354, 2708)]
requested_nodes_list
[[], [], [1355, 1356, 1367, 1371, 1372, 1377, 1378, 1384, 1386, 1387, 1392, 1393, 1396, 1397, 1403, 1410, 1412, 1415, 1416, 1420, 1426, 1427, 1436, 1439, 1451, 1456, 1458, 1460, 1463, 1475, 1480, 1481, 1484, 1485, 1498, 1505, 1506, 1522, 1523, 1528, 1529, 1532, 1533, 1535, 1536, 1538, 1540, 1545, 1552, 1554, 1555, 1557, 1565, 1570, 1571, 1575, 1576, 1580, 1581, 1593, 1595, 1596, 1598, 1601, 1606, 1610, 1611, 1612, 1622, 1623, 1627, 1635, 1645, 1647, 1649, 1656, 1658, 1659, 1662, 1665, 1671, 1681, 1685, 1686, 1689, 1699, 1713, 1715, 1717, 1720, 1721, 1735, 1742, 1745, 1748, 1751, 1753, 1762, 1764, 1768, 1778, 1783, 1787, 1796, 1806, 1807, 1816, 1819, 1840, 1845, 1850, 1851, 1852, 1856, 1857, 1861, 1866, 1870, 1884, 1895, 1896, 1897, 1899, 1900, 1902, 1904, 1919, 1920, 1923, 1926, 1932, 1933, 1934, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1954, 1957, 1966, 1968, 1969, 1970, 1979, 1991, 1998, 1999, 2000, 2001, 2002, 2003, 2008, 2010, 2012, 2016, 2018, 2027, 2030, 2032, 2033, 2034, 2035, 2036, 2039, 2040, 2041, 2053, 2062, 2072, 2076, 2077, 2091, 2095, 2097, 2109, 2126, 2135, 2143, 2166, 2169, 2182, 2183, 2185, 2195, 2203, 2207, 2220, 2243, 2271, 2289, 2290, 2291, 2292, 2293, 2295, 2298, 2299, 2300, 2301, 2302, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2345, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2395, 2397, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2476, 2478, 2479, 2480, 2481, 2482, 2483, 2485, 2486, 2487, 2488, 2489, 2492, 2493, 2494, 2495, 2497, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2536, 2537, 2538, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2592, 2593, 2595, 2596, 2597, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707]]
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]) torch.Size([1354, 1433])
tensor([[   0,    0,    0,  ..., 2289, 2289, 2289],
        [ 416, 1215, 2375,  ...,  101,  388,  979]]) torch.Size([2, 6730])
world size 3
request nodes: 0
request nodes: 578
requested_nodes_list
[[], [0, 1, 2, 3, 6, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 22, 24, 29, 30, 36, 38, 40, 42, 43, 44, 46, 47, 48, 50, 53, 55, 56, 57, 58, 59, 60, 62, 65, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 80, 83, 84, 86, 87, 88, 90, 93, 94, 96, 101, 102, 103, 106, 107, 108, 109, 110, 112, 116, 118, 119, 120, 121, 122, 125, 126, 127, 130, 132, 133, 135, 136, 137, 139, 140, 147, 148, 150, 153, 154, 157, 158, 160, 161, 164, 167, 174, 175, 176, 177, 178, 183, 184, 185, 187, 190, 192, 196, 198, 199, 201, 202, 205, 208, 209, 210, 217, 220, 221, 222, 223, 227, 230, 231, 233, 235, 236, 239, 241, 242, 243, 244, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 262, 265, 266, 268, 271, 272, 278, 279, 280, 281, 285, 286, 288, 289, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 322, 323, 324, 325, 329, 331, 335, 336, 337, 340, 341, 342, 343, 345, 346, 348, 350, 352, 353, 356, 358, 360, 362, 367, 368, 370, 372, 373, 374, 377, 378, 380, 382, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 407, 409, 410, 411, 414, 417, 418, 419, 420, 421, 422, 424, 426, 428, 429, 431, 435, 439, 444, 448, 453, 454, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 482, 483, 486, 487, 488, 489, 490, 491, 494, 496, 499, 504, 506, 511, 512, 517, 518, 522, 523, 526, 527, 529, 531, 534, 536, 539, 541, 542, 543, 546, 548, 550, 551, 555, 560, 561, 563, 564, 566, 567, 569, 578, 582, 584, 585, 589, 593, 594, 596, 598, 599, 602, 605, 608, 609, 610, 611, 614, 615, 616, 617, 620, 621, 624, 625, 626, 629, 631, 632, 633, 634, 638, 640, 641, 642, 643, 644, 646, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 676, 677, 680, 681, 682, 684, 685, 686, 691, 695, 698, 699, 701, 704, 705, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 726, 728, 729, 730, 731, 732, 734, 735, 737, 738, 739, 744, 745, 746, 748, 749, 750, 752, 753, 754, 756, 759, 760, 761, 764, 765, 767, 770, 771, 773, 776, 778, 779, 780, 782, 784, 786, 787, 788, 789, 791, 795, 797, 799, 805, 806, 807, 809, 810, 814, 815, 818, 824, 826, 827, 828, 829, 830, 831, 833, 835, 836, 838, 842, 844, 845, 849, 851, 853, 856, 857, 858, 861, 863, 864, 868, 870, 871, 872, 874, 875, 876, 877, 878, 882, 884, 887, 889, 890, 892, 893, 894, 897, 898, 899, 900, 904, 905, 906, 911, 912, 913, 914, 915, 918, 919, 921, 922, 924, 925, 926, 928, 930, 934, 935, 937, 938, 939, 944, 945, 946, 947, 950, 952, 953, 955, 956, 958, 959, 960, 962, 964, 965, 969, 970, 973, 976, 978, 979, 980, 981, 982, 985, 986, 988, 989, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1010, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1027, 1029, 1031, 1033, 1036, 1037, 1038, 1039, 1041, 1043, 1048, 1049, 1050, 1052, 1053, 1055, 1056, 1058, 1063, 1066, 1067, 1071, 1073, 1077, 1079, 1082, 1083, 1085, 1086, 1091, 1093, 1094, 1097, 1098, 1099, 1103, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1116, 1119, 1120, 1122, 1123, 1125, 1126, 1128, 1132, 1133, 1134, 1137, 1139, 1141, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1157, 1159, 1164, 1165, 1168, 1171, 1173, 1174, 1179, 1181, 1187, 1193, 1195, 1196, 1197, 1199, 1200, 1201, 1203, 1206, 1207, 1215, 1218, 1220, 1222, 1226, 1229, 1236, 1240, 1241, 1242, 1244, 1245, 1246, 1248, 1250, 1251, 1252, 1253, 1255, 1258, 1259, 1263, 1265, 1278, 1288, 1289, 1291, 1293, 1297, 1301, 1302, 1307, 1308, 1316, 1317, 1320, 1321, 1322, 1325, 1327, 1334, 1335, 1336, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1353], []]
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]) torch.Size([1354, 1433])
tensor([[   0, 1354, 1354,  ..., 2289, 2289, 2289],
        [2375, 1355, 1581,  ...,  388,  979, 2290]]) torch.Size([2, 6268])
world size 3
request nodes: 700
Rank 1 has requested data
Rank 2 has received tensor([1355, 1356, 1367, 1371, 1372, 1377, 1378, 1384, 1386, 1387, 1392, 1393,
        1396, 1397, 1403, 1410, 1412, 1415, 1416, 1420, 1426, 1427, 1436, 1439,
        1451, 1456, 1458, 1460, 1463, 1475, 1480, 1481, 1484, 1485, 1498, 1505,
        1506, 1522, 1523, 1528, 1529, 1532, 1533, 1535, 1536, 1538, 1540, 1545,
        1552, 1554, 1555, 1557, 1565, 1570, 1571, 1575, 1576, 1580, 1581, 1593,
        1595, 1596, 1598, 1601, 1606, 1610, 1611, 1612, 1622, 1623, 1627, 1635,
        1645, 1647, 1649, 1656, 1658, 1659, 1662, 1665, 1671, 1681, 1685, 1686,
        1689, 1699, 1713, 1715, 1717, 1720, 1721, 1735, 1742, 1745, 1748, 1751,
        1753, 1762, 1764, 1768, 1778, 1783, 1787, 1796, 1806, 1807, 1816, 1819,
        1840, 1845, 1850, 1851, 1852, 1856, 1857, 1861, 1866, 1870, 1884, 1895,
        1896, 1897, 1899, 1900, 1902, 1904, 1919, 1920, 1923, 1926, 1932, 1933,
        1934, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947,
        1954, 1957, 1966, 1968, 1969, 1970, 1979, 1991, 1998, 1999, 2000, 2001,
        2002, 2003, 2008, 2010, 2012, 2016, 2018, 2027, 2030, 2032, 2033, 2034,
        2035, 2036, 2039, 2040, 2041, 2053, 2062, 2072, 2076, 2077, 2091, 2095,
        2097, 2109, 2126, 2135, 2143, 2166, 2169, 2182, 2183, 2185, 2195, 2203,
        2207, 2220, 2243, 2271, 2289, 2290, 2291, 2292, 2293, 2295, 2298, 2299,
        2300, 2301, 2302, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312,
        2313, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2326,
        2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338,
        2339, 2340, 2345, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
        2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
        2368, 2369, 2370, 2371, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
        2381, 2382, 2383, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
        2395, 2397, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2407, 2408, 2409,
        2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
        2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
        2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
        2446, 2447, 2448, 2449, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458,
        2459, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
        2472, 2473, 2474, 2476, 2478, 2479, 2480, 2481, 2482, 2483, 2485, 2486,
        2487, 2488, 2489, 2492, 2493, 2494, 2495, 2497, 2499, 2500, 2501, 2502,
        2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514,
        2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
        2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2536, 2537, 2538, 2540,
        2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
        2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2563, 2564, 2565,
        2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
        2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
        2590, 2592, 2593, 2595, 2596, 2597, 2599, 2600, 2601, 2602, 2603, 2604,
        2605, 2606, 2607, 2608, 2609, 2610, 2611, 2613, 2614, 2615, 2616, 2617,
        2618, 2619, 2620, 2621, 2622, 2623, 2625, 2626, 2627, 2628, 2629, 2630,
        2631, 2632, 2633, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
        2644, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
        2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
        2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
        2681, 2682, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
        2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
        2706, 2707])
Rank 2 index remapped to  tensor([   1,    2,   13,   17,   18,   23,   24,   30,   32,   33,   38,   39,
          42,   43,   49,   56,   58,   61,   62,   66,   72,   73,   82,   85,
          97,  102,  104,  106,  109,  121,  126,  127,  130,  131,  144,  151,
         152,  168,  169,  174,  175,  178,  179,  181,  182,  184,  186,  191,
         198,  200,  201,  203,  211,  216,  217,  221,  222,  226,  227,  239,
         241,  242,  244,  247,  252,  256,  257,  258,  268,  269,  273,  281,
         291,  293,  295,  302,  304,  305,  308,  311,  317,  327,  331,  332,
         335,  345,  359,  361,  363,  366,  367,  381,  388,  391,  394,  397,
         399,  408,  410,  414,  424,  429,  433,  442,  452,  453,  462,  465,
         486,  491,  496,  497,  498,  502,  503,  507,  512,  516,  530,  541,
         542,  543,  545,  546,  548,  550,  565,  566,  569,  572,  578,  579,
         580,  583,  584,  585,  586,  587,  588,  589,  590,  591,  592,  593,
         600,  603,  612,  614,  615,  616,  625,  637,  644,  645,  646,  647,
         648,  649,  654,  656,  658,  662,  664,  673,  676,  678,  679,  680,
         681,  682,  685,  686,  687,  699,  708,  718,  722,  723,  737,  741,
         743,  755,  772,  781,  789,  812,  815,  828,  829,  831,  841,  849,
         853,  866,  889,  917,  935,  936,  937,  938,  939,  941,  944,  945,
         946,  947,  948,  950,  951,  952,  953,  954,  955,  956,  957,  958,
         959,  961,  962,  963,  964,  965,  966,  967,  968,  969,  970,  972,
         973,  974,  975,  976,  977,  978,  979,  980,  981,  982,  983,  984,
         985,  986,  991,  993,  994,  995,  996,  997,  998,  999, 1000, 1001,
        1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
        1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
        1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
        1041, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055,
        1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
        1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
        1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
        1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104,
        1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
        1118, 1119, 1120, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132,
        1133, 1134, 1135, 1138, 1139, 1140, 1141, 1143, 1145, 1146, 1147, 1148,
        1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
        1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
        1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1186,
        1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
        1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1211,
        1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
        1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
        1236, 1238, 1239, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250,
        1251, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1263,
        1264, 1265, 1266, 1267, 1268, 1269, 1271, 1272, 1273, 1274, 1275, 1276,
        1277, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
        1290, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
        1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
        1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
        1327, 1328, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
        1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
        1352, 1353])
Rank 1 has received tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Rank 2 has sent requested data
GCN_Cora_Distributed_MulNode.py:124: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  send_object(torch.tensor(requested_nodes_list[i]), dst = 1)
Rank 2 has requested data
Rank 1 has received tensor(1356)
Rank 1 index remapped to  tensor(2)
Rank 2 has received tensor([0., 0., 0.,  ..., 0., 0., 0.])
before cat in rank  2 torch.Size([1354, 1433])
after cat in rank 2 torch.Size([1355, 1433])
Rank  2  has data  tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Traceback (most recent call last):
  File "GCN_Cora_Distributed_MulNode.py", line 185, in <module>
    main(rank, world_size, host_addr_full)
  File "GCN_Cora_Distributed_MulNode.py", line 171, in main
    _, pred = model(data).max(dim=1)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "GCN_Cora_Distributed_MulNode.py", line 95, in forward
    print("request nodes:", len(requested_nodes_list[i]))
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/tensor.py", line 572, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
Rank 1 has sent requested data
before cat in rank  1 torch.Size([1354, 1433])
after cat in rank 1 torch.Size([1932, 1433])
Rank  1  has data  tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Traceback (most recent call last):
  File "GCN_Cora_Distributed_MulNode.py", line 185, in <module>
    main(rank, world_size, host_addr_full)
  File "GCN_Cora_Distributed_MulNode.py", line 171, in main
    _, pred = model(data).max(dim=1)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "GCN_Cora_Distributed_MulNode.py", line 136, in forward
    x = self.conv1(x, edge_index)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "GCN_Cora_Distributed_MulNode.py", line 19, in forward
    return self.propagate(edge_index, size=(x.size(0), x.size(0)), x=x)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch_geometric/nn/conv/message_passing.py", line 310, in propagate
    size, kwargs)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch_geometric/nn/conv/message_passing.py", line 202, in __collect__
    j if arg[-2:] == '_j' else i)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch_geometric/nn/conv/message_passing.py", line 171, in __lift__
    return src.index_select(self.node_dim, index)
IndexError: index out of range in self
Traceback (most recent call last):
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 340, in <module>
    main()
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 326, in main
    sigkill_handler(signal.SIGTERM, None)  # not coming back
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 301, in sigkill_handler
    raise subprocess.CalledProcessError(returncode=last_return_code, cmd=cmd)
subprocess.CalledProcessError: Command '['/home/dsys2352/miniconda3/envs/dist_GNN/bin/python', '-u', 'GCN_Cora_Distributed_MulNode.py']' returned non-zero exit status 1.
Killing subprocess 1097296
srun: error: node002: task 1: Exited with exit code 1
Traceback (most recent call last):
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 340, in <module>
    main()
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 326, in main
    sigkill_handler(signal.SIGTERM, None)  # not coming back
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 301, in sigkill_handler
    raise subprocess.CalledProcessError(returncode=last_return_code, cmd=cmd)
subprocess.CalledProcessError: Command '['/home/dsys2352/miniconda3/envs/dist_GNN/bin/python', '-u', 'GCN_Cora_Distributed_MulNode.py']' returned non-zero exit status 1.
Killing subprocess 291620
srun: error: node024: task 2: Exited with exit code 1
