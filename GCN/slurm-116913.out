Hello, I am  2
Hello, I am  1
Hello, I am  0
data sent to node 1
data received on node 1 from node 0
Range
[range(0, 1354), range(1354, 2708)]
data sent to node 2
data received on node 2 from node 0
Range
[range(0, 1354), range(1354, 2708)]
requested_nodes_list
[[], [], [1355, 1357, 1360, 1363, 1372, 1374, 1376, 1383, 1392, 1393, 1394, 1396, 1397, 1398, 1403, 1417, 1424, 1426, 1427, 1428, 1436, 1444, 1474, 1475, 1483, 1487, 1494, 1496, 1499, 1514, 1518, 1521, 1531, 1534, 1543, 1544, 1545, 1547, 1552, 1556, 1558, 1564, 1568, 1572, 1574, 1575, 1579, 1586, 1589, 1592, 1598, 1599, 1603, 1613, 1616, 1622, 1628, 1629, 1633, 1637, 1642, 1645, 1655, 1657, 1668, 1674, 1675, 1676, 1679, 1690, 1691, 1706, 1709, 1712, 1716, 1719, 1722, 1727, 1732, 1733, 1736, 1749, 1757, 1768, 1780, 1788, 1796, 1802, 1810, 1822, 1832, 1837, 1838, 1839, 1847, 1850, 1852, 1856, 1860, 1863, 1873, 1879, 1880, 1882, 1888, 1901, 1903, 1908, 1919, 1921, 1927, 1929, 1937, 1938, 1941, 1946, 1954, 1957, 1962, 1966, 1969, 1975, 1988, 1997, 1999, 2005, 2006, 2009, 2011, 2016, 2034, 2035, 2036, 2041, 2051, 2053, 2066, 2070, 2072, 2074, 2076, 2079, 2086, 2090, 2093, 2096, 2103, 2104, 2108, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2124, 2126, 2134, 2136, 2145, 2146, 2147, 2148, 2149, 2160, 2170, 2171, 2174, 2175, 2176, 2179, 2186, 2188, 2202, 2208, 2209, 2212, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2228, 2229, 2231, 2232, 2256, 2263, 2264, 2270, 2273, 2278, 2286, 2289, 2290, 2291, 2293, 2295, 2296, 2297, 2303, 2307, 2311, 2313, 2314, 2320, 2330, 2371, 2377, 2380, 2384, 2386, 2387, 2390, 2392, 2393, 2397, 2399, 2405, 2412, 2413, 2421, 2439, 2444, 2450, 2456, 2459, 2461, 2471, 2486, 2487, 2497, 2522, 2535, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2603, 2604, 2605, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2637, 2638, 2639, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707]]
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]) torch.Size([1354, 1433])
tensor([[   0,    0,    0,  ..., 2580, 2580, 2580],
        [ 361, 1067, 2657,  ...,   88,  340,  818]]) torch.Size([2, 6280])
world size 3
request nodes: 0
request nodes: 362
Rank 1 sending [1355, 1357, 1360, 1363, 1372, 1374, 1376, 1383, 1392, 1393, 1394, 1396, 1397, 1398, 1403, 1417, 1424, 1426, 1427, 1428, 1436, 1444, 1474, 1475, 1483, 1487, 1494, 1496, 1499, 1514, 1518, 1521, 1531, 1534, 1543, 1544, 1545, 1547, 1552, 1556, 1558, 1564, 1568, 1572, 1574, 1575, 1579, 1586, 1589, 1592, 1598, 1599, 1603, 1613, 1616, 1622, 1628, 1629, 1633, 1637, 1642, 1645, 1655, 1657, 1668, 1674, 1675, 1676, 1679, 1690, 1691, 1706, 1709, 1712, 1716, 1719, 1722, 1727, 1732, 1733, 1736, 1749, 1757, 1768, 1780, 1788, 1796, 1802, 1810, 1822, 1832, 1837, 1838, 1839, 1847, 1850, 1852, 1856, 1860, 1863, 1873, 1879, 1880, 1882, 1888, 1901, 1903, 1908, 1919, 1921, 1927, 1929, 1937, 1938, 1941, 1946, 1954, 1957, 1962, 1966, 1969, 1975, 1988, 1997, 1999, 2005, 2006, 2009, 2011, 2016, 2034, 2035, 2036, 2041, 2051, 2053, 2066, 2070, 2072, 2074, 2076, 2079, 2086, 2090, 2093, 2096, 2103, 2104, 2108, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2124, 2126, 2134, 2136, 2145, 2146, 2147, 2148, 2149, 2160, 2170, 2171, 2174, 2175, 2176, 2179, 2186, 2188, 2202, 2208, 2209, 2212, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2228, 2229, 2231, 2232, 2256, 2263, 2264, 2270, 2273, 2278, 2286, 2289, 2290, 2291, 2293, 2295, 2296, 2297, 2303, 2307, 2311, 2313, 2314, 2320, 2330, 2371, 2377, 2380, 2384, 2386, 2387, 2390, 2392, 2393, 2397, 2399, 2405, 2412, 2413, 2421, 2439, 2444, 2450, 2456, 2459, 2461, 2471, 2486, 2487, 2497, 2522, 2535, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2603, 2604, 2605, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2637, 2638, 2639, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707]
requested_nodes_list
[[], [0, 1, 2, 4, 5, 6, 7, 9, 17, 20, 24, 28, 29, 33, 37, 38, 39, 41, 42, 47, 48, 49, 54, 57, 59, 63, 64, 65, 67, 77, 78, 79, 80, 82, 83, 86, 88, 89, 94, 96, 101, 105, 107, 115, 117, 118, 127, 131, 135, 137, 139, 140, 142, 145, 148, 151, 164, 167, 170, 173, 175, 180, 189, 190, 201, 204, 205, 206, 208, 213, 217, 219, 223, 225, 228, 234, 236, 242, 243, 245, 246, 251, 252, 253, 254, 256, 257, 260, 261, 263, 266, 269, 271, 272, 274, 276, 278, 282, 286, 288, 291, 294, 299, 306, 307, 313, 318, 319, 325, 331, 333, 334, 337, 338, 340, 345, 351, 355, 356, 363, 365, 370, 375, 376, 377, 389, 394, 397, 398, 401, 402, 403, 405, 406, 407, 408, 410, 411, 414, 418, 420, 446, 458, 461, 462, 475, 477, 479, 483, 485, 502, 503, 510, 514, 515, 517, 520, 522, 523, 525, 528, 530, 539, 540, 542, 543, 547, 551, 552, 554, 558, 562, 568, 569, 570, 571, 576, 577, 578, 580, 585, 587, 588, 594, 606, 607, 608, 609, 613, 614, 622, 624, 625, 626, 628, 629, 634, 635, 637, 647, 651, 652, 655, 656, 664, 668, 679, 680, 681, 683, 687, 694, 697, 699, 700, 710, 711, 717, 718, 719, 723, 724, 730, 731, 733, 743, 744, 745, 748, 749, 756, 761, 762, 763, 767, 769, 770, 778, 782, 791, 796, 802, 803, 804, 805, 815, 818, 819, 823, 832, 836, 842, 846, 848, 849, 850, 852, 858, 865, 870, 876, 878, 882, 883, 887, 892, 894, 896, 900, 902, 909, 913, 915, 918, 922, 929, 935, 938, 940, 942, 944, 946, 949, 951, 960, 961, 964, 968, 969, 976, 977, 981, 984, 990, 995, 1002, 1006, 1010, 1013, 1022, 1024, 1025, 1028, 1035, 1040, 1048, 1051, 1053, 1056, 1067, 1070, 1072, 1074, 1078, 1081, 1082, 1083, 1084, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1100, 1104, 1105, 1107, 1116, 1119, 1121, 1122, 1123, 1133, 1138, 1145, 1148, 1150, 1156, 1157, 1161, 1162, 1164, 1168, 1171, 1174, 1184, 1198, 1200, 1207, 1210, 1214, 1220, 1221, 1228, 1231, 1242, 1243, 1248, 1260, 1266, 1267, 1286, 1297, 1310, 1311, 1312, 1316, 1319, 1323, 1324, 1326, 1328, 1329, 1333, 1334, 1335, 1337, 1341, 1342, 1349, 1350, 1353], []]
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]) torch.Size([1354, 1433])
tensor([[   0, 1354, 1354,  ..., 2580, 2580, 2580],
        [2657, 1355, 1638,  ...,  340,  818, 2581]]) torch.Size([2, 5472])
world size 3
request nodes: 384
Rank 1 has requested data
Rank 2 has received tensor([1355, 1357, 1360, 1363, 1372, 1374, 1376, 1383, 1392, 1393, 1394, 1396,
        1397, 1398, 1403, 1417, 1424, 1426, 1427, 1428, 1436, 1444, 1474, 1475,
        1483, 1487, 1494, 1496, 1499, 1514, 1518, 1521, 1531, 1534, 1543, 1544,
        1545, 1547, 1552, 1556, 1558, 1564, 1568, 1572, 1574, 1575, 1579, 1586,
        1589, 1592, 1598, 1599, 1603, 1613, 1616, 1622, 1628, 1629, 1633, 1637,
        1642, 1645, 1655, 1657, 1668, 1674, 1675, 1676, 1679, 1690, 1691, 1706,
        1709, 1712, 1716, 1719, 1722, 1727, 1732, 1733, 1736, 1749, 1757, 1768,
        1780, 1788, 1796, 1802, 1810, 1822, 1832, 1837, 1838, 1839, 1847, 1850,
        1852, 1856, 1860, 1863, 1873, 1879, 1880, 1882, 1888, 1901, 1903, 1908,
        1919, 1921, 1927, 1929, 1937, 1938, 1941, 1946, 1954, 1957, 1962, 1966,
        1969, 1975, 1988, 1997, 1999, 2005, 2006, 2009, 2011, 2016, 2034, 2035,
        2036, 2041, 2051, 2053, 2066, 2070, 2072, 2074, 2076, 2079, 2086, 2090,
        2093, 2096, 2103, 2104, 2108, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
        2117, 2118, 2119, 2124, 2126, 2134, 2136, 2145, 2146, 2147, 2148, 2149,
        2160, 2170, 2171, 2174, 2175, 2176, 2179, 2186, 2188, 2202, 2208, 2209,
        2212, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
        2226, 2228, 2229, 2231, 2232, 2256, 2263, 2264, 2270, 2273, 2278, 2286,
        2289, 2290, 2291, 2293, 2295, 2296, 2297, 2303, 2307, 2311, 2313, 2314,
        2320, 2330, 2371, 2377, 2380, 2384, 2386, 2387, 2390, 2392, 2393, 2397,
        2399, 2405, 2412, 2413, 2421, 2439, 2444, 2450, 2456, 2459, 2461, 2471,
        2486, 2487, 2497, 2522, 2535, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
        2587, 2588, 2589, 2590, 2591, 2592, 2594, 2595, 2596, 2597, 2598, 2599,
        2600, 2601, 2603, 2604, 2605, 2608, 2609, 2610, 2611, 2612, 2613, 2614,
        2615, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
        2628, 2629, 2630, 2631, 2632, 2633, 2634, 2637, 2638, 2639, 2642, 2643,
        2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
        2656, 2657, 2658, 2659, 2660, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
        2669, 2670, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
        2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
        2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
        2706, 2707])
Rank 2 index remapped to  tensor([   1,    3,    6,    9,   18,   20,   22,   29,   38,   39,   40,   42,
          43,   44,   49,   63,   70,   72,   73,   74,   82,   90,  120,  121,
         129,  133,  140,  142,  145,  160,  164,  167,  177,  180,  189,  190,
         191,  193,  198,  202,  204,  210,  214,  218,  220,  221,  225,  232,
         235,  238,  244,  245,  249,  259,  262,  268,  274,  275,  279,  283,
         288,  291,  301,  303,  314,  320,  321,  322,  325,  336,  337,  352,
         355,  358,  362,  365,  368,  373,  378,  379,  382,  395,  403,  414,
         426,  434,  442,  448,  456,  468,  478,  483,  484,  485,  493,  496,
         498,  502,  506,  509,  519,  525,  526,  528,  534,  547,  549,  554,
         565,  567,  573,  575,  583,  584,  587,  592,  600,  603,  608,  612,
         615,  621,  634,  643,  645,  651,  652,  655,  657,  662,  680,  681,
         682,  687,  697,  699,  712,  716,  718,  720,  722,  725,  732,  736,
         739,  742,  749,  750,  754,  756,  757,  758,  759,  760,  761,  762,
         763,  764,  765,  770,  772,  780,  782,  791,  792,  793,  794,  795,
         806,  816,  817,  820,  821,  822,  825,  832,  834,  848,  854,  855,
         858,  861,  862,  863,  864,  865,  866,  867,  868,  869,  870,  871,
         872,  874,  875,  877,  878,  902,  909,  910,  916,  919,  924,  932,
         935,  936,  937,  939,  941,  942,  943,  949,  953,  957,  959,  960,
         966,  976, 1017, 1023, 1026, 1030, 1032, 1033, 1036, 1038, 1039, 1043,
        1045, 1051, 1058, 1059, 1067, 1085, 1090, 1096, 1102, 1105, 1107, 1117,
        1132, 1133, 1143, 1168, 1181, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
        1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245,
        1246, 1247, 1249, 1250, 1251, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
        1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
        1274, 1275, 1276, 1277, 1278, 1279, 1280, 1283, 1284, 1285, 1288, 1289,
        1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
        1302, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
        1315, 1316, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
        1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
        1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
        1352, 1353])
Rank 2 has sent requested data
Rank 2 sending tensor(1357)
GCN_Cora_Distributed_MulNode.py:126: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  send_object(torch.tensor(requested_nodes_list[i]), dst = 1)
Rank 1 has received tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Rank 2 has requested data
Rank 1 has received tensor(1357)
Rank 1 index remapped to  tensor(3)
Rank 2 has received tensor([0., 0., 0.,  ..., 0., 0., 0.])
before cat in rank  2 torch.Size([1354, 1433])
after cat in rank 2 torch.Size([1355, 1433])
Rank  2  has data  tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Traceback (most recent call last):
  File "GCN_Cora_Distributed_MulNode.py", line 187, in <module>
    main(rank, world_size, host_addr_full)
  File "GCN_Cora_Distributed_MulNode.py", line 173, in main
    _, pred = model(data).max(dim=1)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "GCN_Cora_Distributed_MulNode.py", line 95, in forward
    print("request nodes:", len(requested_nodes_list[i]))
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/tensor.py", line 572, in __len__
    raise TypeError("len() of a 0-d tensor")
TypeError: len() of a 0-d tensor
Rank 1 has sent requested data
before cat in rank  1 torch.Size([1354, 1433])
after cat in rank 1 torch.Size([1716, 1433])
Rank  1  has data  tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Traceback (most recent call last):
  File "GCN_Cora_Distributed_MulNode.py", line 187, in <module>
    main(rank, world_size, host_addr_full)
  File "GCN_Cora_Distributed_MulNode.py", line 173, in main
    _, pred = model(data).max(dim=1)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "GCN_Cora_Distributed_MulNode.py", line 138, in forward
    x = self.conv1(x, edge_index)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "GCN_Cora_Distributed_MulNode.py", line 19, in forward
    return self.propagate(edge_index, size=(x.size(0), x.size(0)), x=x)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch_geometric/nn/conv/message_passing.py", line 310, in propagate
    size, kwargs)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch_geometric/nn/conv/message_passing.py", line 202, in __collect__
    j if arg[-2:] == '_j' else i)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch_geometric/nn/conv/message_passing.py", line 171, in __lift__
    return src.index_select(self.node_dim, index)
IndexError: index out of range in self
Traceback (most recent call last):
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 340, in <module>
    main()
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 326, in main
    sigkill_handler(signal.SIGTERM, None)  # not coming back
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 301, in sigkill_handler
    raise subprocess.CalledProcessError(returncode=last_return_code, cmd=cmd)
subprocess.CalledProcessError: Command '['/home/dsys2352/miniconda3/envs/dist_GNN/bin/python', '-u', 'GCN_Cora_Distributed_MulNode.py']' returned non-zero exit status 1.
Killing subprocess 300536
srun: error: node024: task 2: Exited with exit code 1
Traceback (most recent call last):
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 340, in <module>
    main()
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 326, in main
    sigkill_handler(signal.SIGTERM, None)  # not coming back
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 301, in sigkill_handler
    raise subprocess.CalledProcessError(returncode=last_return_code, cmd=cmd)
subprocess.CalledProcessError: Command '['/home/dsys2352/miniconda3/envs/dist_GNN/bin/python', '-u', 'GCN_Cora_Distributed_MulNode.py']' returned non-zero exit status 1.
Killing subprocess 1105358
srun: error: node002: task 1: Exited with exit code 1
