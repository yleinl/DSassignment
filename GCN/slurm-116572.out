Hello, I am  2
Hello, I am  1
Hello, I am  0
data sent to node 1
data received on node 1 from node 0
data sent to node 2
data received on node 2 from node 0
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]) torch.Size([1354, 1433])
tensor([[   0,    0,    0,  ..., 1756, 1756, 1756],
        [ 380, 1099, 1704,  ...,   88,  356,  869]]) torch.Size([2, 6416])
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]) torch.Size([1354, 1433])
tensor([[1354,    0,    0,  ..., 1134, 1134, 1134],
        [1195,    1,  264,  ..., 1505, 1683, 1135]]) torch.Size([2, 5716])
Rank 1 has requested data
Rank 2 has received tensor([ 679,  680,  681,  683,  687,  688,  692,  694,  695,  698,  699,  701,
         703,  709,  713,  714,  719,  720,  722,  726,  727,  728,  730,  731,
         734,  735,  736,  739,  740,  741,  746,  747,  750,  751,  755,  765,
         770,  773,  774,  782,  783,  786,  788,  793,  797,  800,  801,  802,
         804,  807,  808,  810,  811,  813,  814,  820,  824,  826,  831,  833,
         834,  836,  837,  839,  840,  844,  847,  852,  855,  856,  858,  859,
         861,  865,  876,  879,  886,  887,  889,  891,  893,  894,  895,  898,
         899,  900,  901,  904,  910,  911,  916,  917,  922,  924,  928,  930,
         931,  932,  934,  937,  940,  941,  942,  943,  945,  947,  948,  953,
         956,  958,  964,  965,  967,  971,  972,  979,  980,  982,  984,  986,
         987,  991,  996,  997, 1000, 1001, 1002, 1006, 1009, 1011, 1012, 1015,
        1016, 1018, 1019, 1022, 1024, 1025, 1026, 1028, 1030, 1031, 1033, 1035,
        1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1053, 1055, 1056, 1059,
        1060, 1061, 1068, 1070, 1071, 1072, 1075, 1081, 1083, 1086, 1088, 1089,
        1090, 1091, 1092, 1093, 1095, 1106, 1107, 1109, 1113, 1117, 1118, 1122,
        1124, 1125, 1128, 1130, 1135, 1136, 1138, 1139, 1140, 1143, 1144, 1146,
        1147, 1151, 1158, 1162, 1165, 1167, 1168, 1170, 1171, 1175, 1179, 1180,
        1181, 1182, 1183, 1187, 1188, 1189, 1193, 1194, 1196, 1197, 1198, 1200,
        1202, 1204, 1205, 1206, 1208, 1225, 1226, 1228, 1230, 1232, 1233, 1237,
        1245, 1248, 1249, 1251, 1253, 1255, 1256, 1257, 1260, 1263, 1267, 1270,
        1271, 1276, 1277, 1279, 1280, 1289, 1296, 1302, 1303, 1304, 1307, 1310,
        1311, 1312, 1313, 1318, 1319, 1320, 1321, 1325, 1326, 1327, 1328, 1330,
        1335, 1336, 1337, 1342, 1346, 1349, 1353])
Rank 2 index remapped to  tensor([ 679,  680,  681,  683,  687,  688,  692,  694,  695,  698,  699,  701,
         703,  709,  713,  714,  719,  720,  722,  726,  727,  728,  730,  731,
         734,  735,  736,  739,  740,  741,  746,  747,  750,  751,  755,  765,
         770,  773,  774,  782,  783,  786,  788,  793,  797,  800,  801,  802,
         804,  807,  808,  810,  811,  813,  814,  820,  824,  826,  831,  833,
         834,  836,  837,  839,  840,  844,  847,  852,  855,  856,  858,  859,
         861,  865,  876,  879,  886,  887,  889,  891,  893,  894,  895,  898,
         899,  900,  901,  904,  910,  911,  916,  917,  922,  924,  928,  930,
         931,  932,  934,  937,  940,  941,  942,  943,  945,  947,  948,  953,
         956,  958,  964,  965,  967,  971,  972,  979,  980,  982,  984,  986,
         987,  991,  996,  997, 1000, 1001, 1002, 1006, 1009, 1011, 1012, 1015,
        1016, 1018, 1019, 1022, 1024, 1025, 1026, 1028, 1030, 1031, 1033, 1035,
        1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1053, 1055, 1056, 1059,
        1060, 1061, 1068, 1070, 1071, 1072, 1075, 1081, 1083, 1086, 1088, 1089,
        1090, 1091, 1092, 1093, 1095, 1106, 1107, 1109, 1113, 1117, 1118, 1122,
        1124, 1125, 1128, 1130, 1135, 1136, 1138, 1139, 1140, 1143, 1144, 1146,
        1147, 1151, 1158, 1162, 1165, 1167, 1168, 1170, 1171, 1175, 1179, 1180,
        1181, 1182, 1183, 1187, 1188, 1189, 1193, 1194, 1196, 1197, 1198, 1200,
        1202, 1204, 1205, 1206, 1208, 1225, 1226, 1228, 1230, 1232, 1233, 1237,
        1245, 1248, 1249, 1251, 1253, 1255, 1256, 1257, 1260, 1263, 1267, 1270,
        1271, 1276, 1277, 1279, 1280, 1289, 1296, 1302, 1303, 1304, 1307, 1310,
        1311, 1312, 1313, 1318, 1319, 1320, 1321, 1325, 1326, 1327, 1328, 1330,
        1335, 1336, 1337, 1342, 1346, 1349, 1353])
Rank2 has sent requested data
torch.Size([1354, 1433])
Traceback (most recent call last):
  File "GCN_Cora_Distributed_MulNode.py", line 154, in <module>
    main(rank, world_size, host_addr_full)
  File "GCN_Cora_Distributed_MulNode.py", line 140, in main
    _, pred = model(data).max(dim=1)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "GCN_Cora_Distributed_MulNode.py", line 99, in forward
    torch.cat(x, requested_nodes_feature, dim = 0)
UnboundLocalError: local variable 'requested_nodes_feature' referenced before assignment
Rank1 has received tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
torch.Size([1354, 1433])
Traceback (most recent call last):
  File "GCN_Cora_Distributed_MulNode.py", line 154, in <module>
    main(rank, world_size, host_addr_full)
  File "GCN_Cora_Distributed_MulNode.py", line 140, in main
    _, pred = model(data).max(dim=1)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "GCN_Cora_Distributed_MulNode.py", line 99, in forward
    torch.cat(x, requested_nodes_feature, dim = 0)
TypeError: cat() received an invalid combination of arguments - got (Tensor, Tensor, dim=int), but expected one of:
 * (tuple of Tensors tensors, name dim, *, Tensor out)
 * (tuple of Tensors tensors, int dim, *, Tensor out)

Traceback (most recent call last):
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 340, in <module>
    main()
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 326, in main
    sigkill_handler(signal.SIGTERM, None)  # not coming back
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 301, in sigkill_handler
    raise subprocess.CalledProcessError(returncode=last_return_code, cmd=cmd)
subprocess.CalledProcessError: Command '['/home/dsys2352/miniconda3/envs/dist_GNN/bin/python', '-u', 'GCN_Cora_Distributed_MulNode.py']' returned non-zero exit status 1.
Killing subprocess 1080270
srun: error: node002: task 1: Exited with exit code 1
Traceback (most recent call last):
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 340, in <module>
    main()
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 326, in main
    sigkill_handler(signal.SIGTERM, None)  # not coming back
  File "/home/dsys2352/miniconda3/envs/dist_GNN/lib/python3.6/site-packages/torch/distributed/launch.py", line 301, in sigkill_handler
    raise subprocess.CalledProcessError(returncode=last_return_code, cmd=cmd)
subprocess.CalledProcessError: Command '['/home/dsys2352/miniconda3/envs/dist_GNN/bin/python', '-u', 'GCN_Cora_Distributed_MulNode.py']' returned non-zero exit status 1.
Killing subprocess 274616
srun: error: node024: task 2: Exited with exit code 1
